"""
Django settings for email_sms_integration project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


environment_error_message = """
The following environmental variables need to be assigned:

DJANGO_SECRET_KEY
HOST_URL
BANDWIDTH_USER_ID
BANDWIDTH_API_TOKEN
BANDWIDTH_API_SECRET
BANDWIDTH_NUMBER
MAILGUN_API_KEY
MAILGUN_EMAIL_DOMAIN
DESTINATION_EMAIL
DEBUG (must be true or false)
"""

if not (len(sys.argv) > 1 and sys.argv[-1] == 'test'):
    # Check and assign environmental variables if not in testing mode
    try:
        os.environ['DJANGO_SECRET_KEY']
        os.environ['HOST_URL']
        os.environ['BANDWIDTH_USER_ID']
        os.environ['BANDWIDTH_API_TOKEN']
        os.environ['BANDWIDTH_API_SECRET']
        os.environ['BANDWIDTH_NUMBER']
        os.environ['MAILGUN_API_KEY']
        os.environ['MAILGUN_EMAIL_DOMAIN']
        os.environ['DESTINATION_EMAIL']
        os.environ['DEBUG']
        os.environ['TEST'] = 'false'
    except KeyError:
        print(environment_error_message)
        exit(-1)
else:
    # Assign dummy environmental variables if in testing environment
    os.environ['DJANGO_SECRET_KEY'] = 'key'
    os.environ['HOST_URL'] = 'url'
    os.environ['BANDWIDTH_USER_ID'] = 'id'
    os.environ['BANDWIDTH_API_TOKEN'] = 'token'
    os.environ['BANDWIDTH_API_SECRET'] = 'secret'
    os.environ['BANDWIDTH_NUMBER'] = 'number'
    os.environ['MAILGUN_API_KEY'] = 'key'
    os.environ['MAILGUN_EMAIL_DOMAIN'] = 'domain'
    os.environ['DESTINATION_EMAIL'] = 'email'
    os.environ['DEBUG'] = 'true'
    os.environ['TEST'] = 'true'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['DJANGO_SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ['DEBUG'].lower() == 'true'


ALLOWED_HOSTS = [os.environ['HOST_URL']]


# Application definition

INSTALLED_APPS = [
    'send_bandwidth_message.apps.SendBandwidthMessageConfig',
    'send_mailgun_email.apps.SendMailgunEmailConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'email_sms_integration.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'email_sms_integration.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
